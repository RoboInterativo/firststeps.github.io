Шаг 2 - Создание и удаление БД
--------------

Создание БД при помощи консольного клиента sqlite3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Проект SQLite предоставляет простую программу командной строки с именем sqlite3
(или sqlite3.exe в Windows), которая позволяет пользователю вручную вводить
и выполнять SQL-выражения в отношении базы данных SQLite или ZIP-архива.
В этом документе представлено краткое введение в использование программы sqlite3.

Ниже пример запуска, он создает файл с именем mydb

 .. code-block:: shell

    sqlite3 mydb
    SQLite version 3.36.0 2021-06-18 18:36:39
    Enter ".help" for usage hints.
    sqlite> create table tbl1(one text, two int);
    sqlite> insert into tbl1 values('hello!',10);
    sqlite> insert into tbl1 values('goodbye', 20);
    sqlite> select * from tbl1;
    hello!|10
    goodbye|20
    sqlite>

Начало работы в python
~~~~~~~~~~~~~~~~~~~~~~

 .. code-block:: python

    import sqlite3
    # Создаем подключение к базе данных (файл my_database.db будет создан)
    connection = sqlite3.connect('my_database.db')
    connection.close()


Начало работы в c#(dotnet)
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Ниже пример кода в c# (`подробнее о с# по ссылке`_)

.. _подробнее о с# по ссылке : https://learn.microsoft.com/ru-ru/dotnet/standard/data/sqlite/?tabs=netcore-cli



 .. code-block:: csharp

    using (var connection = new SqliteConnection("Data Source=hello.db"))
    {
        connection.Open();

        var command = connection.CreateCommand();
        command.CommandText =
        @"
            SELECT name
            FROM user
            WHERE id = $id
        ";
        command.Parameters.AddWithValue("$id", id);

        using (var reader = command.ExecuteReader())
        {
            while (reader.Read())
            {
                var name = reader.GetString(0);

                Console.WriteLine($"Hello, {name}!");
            }
        }
    }

Начало работы в JAVA
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Ниже пример кода в c# (`подробнее о JAVA по ссылке`_)

.. _подробнее о JAVA по ссылке : https://habr.com/ru/sandbox/88039/

После создания проекта, создаю 2 класса.
Первый класс для запуска:

 .. code-block:: java

    import java.sql.SQLException;

    public class db {

    	public static void main(String[] args) throws ClassNotFoundException, SQLException {
    		conn.Conn();
    		conn.CreateDB();
    		conn.WriteDB();
    		conn.ReadDB();
    		conn.CloseDB();
    	}
    }



Во втором классе сделана основная реализация:

 .. code-block:: java


    import java.sql.Connection;
    import java.sql.DriverManager;
    import java.sql.ResultSet;
    import java.sql.SQLException;
    import java.sql.Statement;


    public class conn {
    	public static Connection conn;
    	public static Statement statmt;
    	public static ResultSet resSet;

    	// --------ПОДКЛЮЧЕНИЕ К БАЗЕ ДАННЫХ--------
    	public static void Conn() throws ClassNotFoundException, SQLException
    	   {
    		   conn = null;
    		   Class.forName("org.sqlite.JDBC");
    		   conn = DriverManager.getConnection("jdbc:sqlite:TEST1.s3db");

    		   System.out.println("База Подключена!");
    	   }

    	// --------Создание таблицы--------
    	public static void CreateDB() throws ClassNotFoundException, SQLException
    	   {
    		statmt = conn.createStatement();
    		statmt.execute("CREATE TABLE if not exists 'users' ('id' INTEGER PRIMARY KEY AUTOINCREMENT, 'name' text, 'phone' INT);");

    		System.out.println("Таблица создана или уже существует.");
    	   }

    	// --------Заполнение таблицы--------
    	public static void WriteDB() throws SQLException
    	{
    		   statmt.execute("INSERT INTO 'users' ('name', 'phone') VALUES ('Petya', 125453); ");
    		   statmt.execute("INSERT INTO 'users' ('name', 'phone') VALUES ('Vasya', 321789); ");
    		   statmt.execute("INSERT INTO 'users' ('name', 'phone') VALUES ('Masha', 456123); ");

    		   System.out.println("Таблица заполнена");
    	}

    	// -------- Вывод таблицы--------
    	public static void ReadDB() throws ClassNotFoundException, SQLException
    	   {
    		resSet = statmt.executeQuery("SELECT * FROM users");

    		while(resSet.next())
    		{
    			int id = resSet.getInt("id");
    			String  name = resSet.getString("name");
    			String  phone = resSet.getString("phone");
    	         System.out.println( "ID = " + id );
    	         System.out.println( "name = " + name );
    	         System.out.println( "phone = " + phone );
    	         System.out.println();
    		}

    		System.out.println("Таблица выведена");
    	    }

    		// --------Закрытие--------
    		public static void CloseDB() throws ClassNotFoundException, SQLException
    		   {
    			conn.close();
    			statmt.close();
    			resSet.close();

    			System.out.println("Соединения закрыты");
    		   }

    }
